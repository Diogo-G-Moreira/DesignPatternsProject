/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package collegeimagedb;

import Model.Database;
import com.mongodb.DB;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.mongodb.client.MongoCursor;
import java.util.ArrayList;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Diogo
 */
public class AddRecord extends javax.swing.JFrame {

    /**
     * Creates new form AddRecord
     */
    Database db = new Database();
    ArrayList<String> listSoftware; 
    ArrayList<String> listClassroom; 
    
    public AddRecord() {
        
        boolean status = db.Connect("localhost", 27017);

        initComponents();
	
        modelField.setEditable(false);
        mSerialField.setEditable(false);
        mStockField.setEditable(false);
        accessory1.setEditable(false);
        accessory2.setEditable(false);
        accessory3.setEditable(false);

        
        ArrayList<DBObject> softwareList = new ArrayList<DBObject>();
		softwareList = db.getSoftware();
        listSoftware = new ArrayList<String>();

       DefaultListModel listModel = new DefaultListModel();
        for(int i = 0; i < softwareList.size(); i++)
        {

            String option = softwareList.get(i).get("title").toString() + " - " +
                    softwareList.get(i).get("version").toString();
            listSoftware.add(option);
            
            listModel.addElement(option);
        }

        softwareJList.setModel(listModel);
        
         ArrayList<DBObject> classroomList = new ArrayList<DBObject>();
		classroomList = db.getLocation();
        listClassroom = new ArrayList<String>();
        System.out.println(classroomList);
        locationComboBox.addItem("");
        for(int i = 0; i < classroomList.size(); i++)
        {
            String option = classroomList.get(i).get("classroom").toString();

            listClassroom.add(option);
            
            locationComboBox.addItem(option);
        }
             System.out.println("End");


       
        
       
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        addSoftwarePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        softwareField = new javax.swing.JTextField();
        versionField = new javax.swing.JTextField();
        toolfield1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        toolfield2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        toolfield3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        softwareJList = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        imageField = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        accessory1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        accessory2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        accessory3 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        locationComboBox = new javax.swing.JComboBox<>();
        AccessoryCheck = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        machineField = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        modelField = new javax.swing.JTextField();
        mSerialField = new javax.swing.JTextField();
        mStockField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        serialField = new javax.swing.JTextField();
        stockField = new javax.swing.JTextField();
        macField = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        commentTextArea2 = new javax.swing.JTextArea();
        monitorCheck = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        commentTextArea = new javax.swing.JTextArea();
        classroomField = new javax.swing.JTextField();
        capacityField = new javax.swing.JTextField();
        videoCheckbox = new javax.swing.JCheckBox();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Add Record");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Return");

        jLabel2.setText("Software:");

        jLabel3.setText("Version:");

        jLabel4.setText("Additional Tools:");

        jLabel5.setText("Tool #1");

        jLabel6.setText("Tool #2");

        toolfield2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolfield2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Tool #3");

        javax.swing.GroupLayout addSoftwarePanelLayout = new javax.swing.GroupLayout(addSoftwarePanel);
        addSoftwarePanel.setLayout(addSoftwarePanelLayout);
        addSoftwarePanelLayout.setHorizontalGroup(
            addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSoftwarePanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addSoftwarePanelLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(35, 35, 35)
                        .addComponent(toolfield3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addSoftwarePanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(35, 35, 35)
                        .addComponent(toolfield2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addSoftwarePanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(35, 35, 35)
                        .addComponent(toolfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addGroup(addSoftwarePanelLayout.createSequentialGroup()
                        .addGroup(addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(softwareField)
                            .addComponent(versionField, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        addSoftwarePanelLayout.setVerticalGroup(
            addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSoftwarePanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(softwareField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(versionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(toolfield1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(toolfield2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addSoftwarePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(toolfield3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Software", addSoftwarePanel);

        jLabel8.setText("Image:");

        jLabel9.setText("Location");

        jLabel10.setText("Machine");

        softwareJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(softwareJList);

        jLabel11.setText("Software");

        jLabel12.setText("Accessories");

        jLabel13.setText("Accessory #1");

        jLabel14.setText("Accessory #2");

        jLabel15.setText("Accessory #3");

        accessory3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessory3ActionPerformed(evt);
            }
        });

        jLabel16.setText("Comment");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        AccessoryCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccessoryCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 113, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField3)
                            .addComponent(imageField)
                            .addComponent(locationComboBox, 0, 80, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(AccessoryCheck)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(accessory1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(accessory2))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(accessory3)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(imageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(locationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jLabel11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AccessoryCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(accessory1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(accessory2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(accessory3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jLabel16))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTabbedPane1.addTab("Images", jPanel1);

        jLabel21.setText("Machine:");

        jLabel22.setText("Computer Name");

        jLabel23.setText("Serial #");

        jLabel24.setText("STOCK");

        jLabel25.setText("MAC Address:");

        jLabel26.setText("Monitor");

        jLabel27.setText("Model:");

        jLabel28.setText("Serial #");

        jLabel29.setText("STOCK");

        jLabel30.setText("Comments:");

        commentTextArea2.setColumns(20);
        commentTextArea2.setRows(5);
        jScrollPane4.setViewportView(commentTextArea2);

        monitorCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monitorCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel21))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22)
                            .addComponent(jLabel24)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel30)
                                .addComponent(jLabel25)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(machineField)
                            .addComponent(nameField)
                            .addComponent(serialField)
                            .addComponent(stockField, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(macField))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel26))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel28)
                                    .addGap(4, 4, 4)))
                            .addComponent(jLabel29))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modelField)
                            .addComponent(mSerialField)
                            .addComponent(mStockField, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(monitorCheck)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monitorCheck)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(machineField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel27)
                    .addComponent(modelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel28)
                    .addComponent(mSerialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel29)
                    .addComponent(mStockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(macField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addContainerGap(69, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Hardware", jPanel2);

        jLabel17.setText("Classroom:");

        jLabel19.setText("Capacity:");

        jLabel20.setText("Comment");

        commentTextArea.setColumns(20);
        commentTextArea.setRows(5);
        jScrollPane3.setViewportView(commentTextArea);

        videoCheckbox.setText("Video Conferencing");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(videoCheckbox)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(capacityField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(classroomField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(classroomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(capacityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(videoCheckbox)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Classrooms", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(173, 173, 173))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addButton))
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(addButton))
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        
        String selectedIndex = jTabbedPane1.getTitleAt(jTabbedPane1.getSelectedIndex());
        System.out.println(selectedIndex);
        //Object selected = collectionList.getSelectedItem();
        
        ///////////////////////////////////////////////////////////////////////
        // Software
        //
        ///////////////////////////////////////////////////////////////////////
        if(selectedIndex.equals("Software"))
        {     
        boolean missingSoftware = true;
        boolean missingVersion = true;
        String softwareName = null;
        String vNumber = null;
        String[] tools = new String [3];     
                    System.out.println("Software here?");
            if(softwareField.getText().toString() != "")
            {
                        System.out.println("yes Software");
                softwareName = softwareField.getText().toString();
                missingSoftware = false;
            }
            System.out.println("Version here?");
            if(versionField.getText().toString() != "")
            {
                System.out.println("yes Version");
                vNumber = versionField.getText().toString();
                missingVersion = false;
            }
            System.out.println("'"+toolfield1.getText().toString()+"'");
            if(!(toolfield1.getText().toString()).isEmpty())
            {
                tools[0] = toolfield1.getText().toString();
                System.out.println("Hello"+toolfield1.getText().toString());
                if(!(toolfield2.getText().toString()).isEmpty())
                {
                    tools[1] = toolfield2.getText().toString();
                    if(!(toolfield3.getText().toString()).isEmpty())
                    {
                        tools[2] = toolfield3.getText().toString();
                    }
                }
            }
            
            if(missingSoftware == true || missingVersion == true)
            {
                System.out.println("Missing a mandatory field, check Software or version fields are not empty.");
            }
            else{
                if(tools[0]==null )
                {
                    System.out.println("No Array");
                    boolean success = db.addRecordSoftware(softwareName, vNumber);
                    System.out.println(success);
                }
                else{
                    boolean success = db.addRecordSoftware(softwareName, vNumber, tools);
                    System.out.println(success);
                }
            }
        }
        ///////////////////////////////////////////////////////////////////////
        // Classrooms
        //
        ///////////////////////////////////////////////////////////////////////
        
                if(selectedIndex.equals("Classrooms"))
        {          
            boolean missingClassroom = true;
            boolean missingCapacity = true;
            String classroom = null;
            String capacity = null;
            boolean video = false;
            String comment = null;
                    System.out.println("Software here?");
            if(classroomField.getText().toString() != "")
            {
                        System.out.println("yes classs");
                classroom = classroomField.getText().toString();
                missingClassroom = false;
            }
            System.out.println("capacity here?");
            if(capacityField.getText().toString() != "")
            {
                System.out.println("yes Capaccity");
                capacity = capacityField.getText().toString();
               missingCapacity = false;
            }
            video = videoCheckbox.isSelected();
            System.out.println("Comment");
            System.out.println(commentTextArea.getText().trim() );
            
            if(commentTextArea.getText()!=null||!commentTextArea.getText().isEmpty())
            {
                System.out.println("yes Comment");
                comment = commentTextArea.getText().toString();
            } else {
            }
            
            if(missingClassroom == true || missingCapacity == true)
            {
                System.out.println("Missing a mandatory field, check Software or version fields are not empty.");
            }
            else{
                if(commentTextArea.getText()==null || commentTextArea.getText().isEmpty())
                {
                    System.out.println("No Comment");
                    boolean success = db.addRecordLocation(classroom, capacity, video);
                    System.out.println(success);
                }
                else{
                    System.out.println("yes Comment");
                    boolean success = db.addRecordLocation(classroom, capacity, video, comment);
                    System.out.println(success);
                }
            }
        }
        
        ///////////////////////////////////////////////////////////////////////
        // Hardware
        //
        ///////////////////////////////////////////////////////////////////////
        
        if(selectedIndex.equals("Hardware"))
        {          
            boolean missingMachine = true;
            boolean missingMAC = true;
            boolean missingSerial = true;
            boolean missingName = true;
            boolean missingStock = true;
            String machine = null;
            String name = null;
            String serial = null;
            String stock = null;
            String mac = null;
            String monitorModel = null;
            String monitorSerial = null;
            String monitorStock = null;
            String comment = null;

                    System.out.println("Software here?");
            if(machineField.getText().toString() != "")
            {
                System.out.println("yes machine");
                machine = machineField.getText().toString();
                missingMachine = false;
            }
            System.out.println("MAC here?");
            if(macField.getText().toString() != "")
            {
                System.out.println("yes Mac");
                mac = macField.getText().toString();
               missingMAC = false;
            }
            System.out.println("name here?");
            if(nameField.getText().toString() != "")
            {
                System.out.println("yes name");
                name = nameField.getText().toString();
               missingName = false;
            }
            if(serialField.getText().toString() != "")
            {
                System.out.println("yes serial");
                serial = serialField.getText().toString();
               missingSerial = false;
            }
            if(stockField.getText().toString() != "")
            {
                System.out.println("yes stock");
                stock = stockField.getText().toString();
               missingStock = false;
            }

            if(monitorCheck.isSelected())
            {
            if(modelField.getText().toString() != "")
            {
                System.out.println("yes model");
                monitorModel = modelField.getText().toString();
                if(mSerialField.getText().toString() != "")
            {
                System.out.println("yes Monior serial");
                monitorSerial = mSerialField.getText().toString();
                if(mStockField.getText().toString() != "")
            {
                System.out.println("yes stock");
                monitorStock = mStockField.getText().toString();
            }
            }
            }
            }
            System.out.println("MAC here?");
            
            
            System.out.println("Comment");
            System.out.println(commentTextArea.getText().length() );
            
            if(commentTextArea2.getText().length() > 0)
            {
                System.out.println("yes Comment");
                comment = commentTextArea2.getText().toString();
            } else {
            }
            
            if(missingMachine == true || missingName == true || missingMAC == true || missingSerial == true || missingStock == true)
            {
                System.out.println("Missing a mandatory field, check Software or version fields are not empty.");
            }
            else{
                if(commentTextArea2.getText().length() == 0 && monitorCheck.isSelected()==true)
                {
                    System.out.println("No Comment");
                    boolean success = db.addRecordHardware(machine, name, serial,stock,mac,monitorModel,monitorSerial,monitorStock);
                    System.out.println(success);
                }
                else if(commentTextArea2.getText().length() > 0 && monitorCheck.isSelected()==false)
                {
                    System.out.println("No monitor");
                    boolean success = db.addRecordHardware(machine, name, serial,stock,mac, comment);
                    System.out.println(success);
                }
                else if(commentTextArea2.getText().length() == 0 && monitorCheck.isSelected()==false)
                {
                    System.out.println("No nothing");
                    boolean success = db.addRecordHardware(machine, name, serial,stock,mac);
                    System.out.println(success);
                }
                else{
                    System.out.println("yes everything");
                     boolean success = db.addRecordHardware(machine, name, serial,stock,mac,monitorModel,monitorSerial,monitorStock,comment);
                    System.out.println(success);
                }
            }
        }
        
        ///////////////////////////////////////////////////////////////////////
        // Images
        //
        ///////////////////////////////////////////////////////////////////////
        
        if(selectedIndex.equals("Images"))
        {          
            boolean missingMachine = true;
            boolean missingImage = true;
            boolean missingLocation = true;
            boolean missingSoftware = true;
            String machine = null;
            String image = null;
            String location = null;
            String accessoryOne = null;
            String accessoryTwo = null;
            String accessoryThree = null;
            ArrayList<Integer> softwareSelected = new ArrayList<Integer> ();
            String comment = null;

            
            if(machineField.getText().toString() != "")
            {
                System.out.println("yes machine");
                machine = machineField.getText().toString();
                missingMachine = false;
            }
            System.out.println("image here?");
            if(imageField.getText().toString() != "")
            {
                System.out.println("yes image");
                image = imageField.getText().toString();
                missingImage = false;
            }
            System.out.println("location here?");
            if(locationComboBox.getSelectedItem().toString() != "")
            {
                System.out.println("yes location");
                location = locationComboBox.getSelectedItem().toString();
               missingLocation = false;
            }
            
        
                System.out.println(softwareJList.getSelectedIndices());
           
            /*
            if(serialField.getText().toString() != "")
            {if(serialField.getText().toString() != "")
            {if(serialField.getText().toString() != "")
            {if(serialField.getText().toString() != "")
            {
                System.out.println("yes serial");
                serial = serialField.getText().toString();
               missingSerial = false;
            }
            if(stockField.getText().toString() != "")
            {
                System.out.println("yes stock");
                stock = stockField.getText().toString();
               missingStock = false;
            }

            if(modelField.getText().toString() != "")
            {
                System.out.println("yes model");
                monitorModel = machineField.getText().toString();
                if(mSerialField.getText().toString() != "")
            {
                System.out.println("yes Monior serial");
                monitorSerial = mSerialField.getText().toString();
                if(mStockField.getText().toString() != "")
            {
                System.out.println("yes stock");
                monitorStock = mStockField.getText().toString();
            }
            }
            }
            System.out.println("MAC here?");
            
            
            System.out.println("Comment");
            System.out.println(commentTextArea.getText().trim() );
            
            if(commentTextArea2.getText()!=null||!commentTextArea2.getText().isEmpty())
            {
                System.out.println("yes Comment");
                comment = commentTextArea2.getText().toString();
            } else {
            }
            
            if(missingMachine == true || missingName == true || missingMAC == true || missingSerial == true || missingStock == true)
            {
                System.out.println("Missing a mandatory field, check Software or version fields are not empty.");
            }
            else{
                if(commentTextArea2.getText()==null || commentTextArea2.getText().isEmpty())
                {
                    System.out.println("No Comment");
                    boolean success = db.addRecordHardware(machine, name, serial,stock,mac,monitorModel,monitorSerial,monitorStock);
                    System.out.println(success);
                }
                else if(monitorModel == null)
                {
                    System.out.println("No monitor");
                    boolean success = db.addRecordHardware(machine, name, serial,stock,mac);
                    System.out.println(success);
                }
                else{
                    System.out.println("yes Comment");
                     boolean success = db.addRecordHardware(machine, name, serial,stock,mac,monitorModel,monitorSerial,monitorStock,comment);
                    System.out.println(success);
                }
          */ } 
        

    }//GEN-LAST:event_addButtonActionPerformed

    private void toolfield2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolfield2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolfield2ActionPerformed

    private void accessory3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessory3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accessory3ActionPerformed

    private void monitorCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monitorCheckActionPerformed

    if(monitorCheck.isSelected())
     {
        modelField.setEditable(true);
        mSerialField.setEditable(true);
        mStockField.setEditable(true);
     }
  else{
        
         modelField.setEditable(false);
        mSerialField.setEditable(false);
        mStockField.setEditable(false);
  }





        // TODO add your handling code here:
    }//GEN-LAST:event_monitorCheckActionPerformed

    private void AccessoryCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccessoryCheckActionPerformed

  if(AccessoryCheck.isSelected())
     {
        accessory1.setEditable(true);
        accessory2.setEditable(true);
        accessory3.setEditable(true);
     }
  else{
        
        accessory1.setEditable(false);
        accessory2.setEditable(false);
        accessory3.setEditable(false);
  }


    }//GEN-LAST:event_AccessoryCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AccessoryCheck;
    private javax.swing.JTextField accessory1;
    private javax.swing.JTextField accessory2;
    private javax.swing.JTextField accessory3;
    private javax.swing.JButton addButton;
    private javax.swing.JPanel addSoftwarePanel;
    private javax.swing.JTextField capacityField;
    private javax.swing.JTextField classroomField;
    private javax.swing.JTextArea commentTextArea;
    private javax.swing.JTextArea commentTextArea2;
    private javax.swing.JTextField imageField;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JComboBox<String> locationComboBox;
    private javax.swing.JTextField mSerialField;
    private javax.swing.JTextField mStockField;
    private javax.swing.JTextField macField;
    private javax.swing.JTextField machineField;
    private javax.swing.JTextField modelField;
    private javax.swing.JCheckBox monitorCheck;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField serialField;
    private javax.swing.JTextField softwareField;
    private javax.swing.JList<String> softwareJList;
    private javax.swing.JTextField stockField;
    private javax.swing.JTextField toolfield1;
    private javax.swing.JTextField toolfield2;
    private javax.swing.JTextField toolfield3;
    private javax.swing.JTextField versionField;
    private javax.swing.JCheckBox videoCheckbox;
    // End of variables declaration//GEN-END:variables
}
