/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Database;
import com.mongodb.BasicDBList;
import com.mongodb.BasicDBObject;
import com.mongodb.DBObject;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import org.bson.BSONObject;

/**
 *
 * @author Diogo
 */
public class ViewRecord extends javax.swing.JFrame {

    /**
     * Creates new form UpdateRecord
     */
    Database db = new Database();
    int dataType;
    ArrayList <String> comments; 
    int currentComment = 0;

    public ViewRecord() {
        initComponents();
        setUpForm();
    }

    public ViewRecord(int dataType, DBObject selectedObject) {
        initComponents();
        this.dataType = dataType;
        setUpForm(selectedObject);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        text1 = new javax.swing.JTextField();
        text2 = new javax.swing.JTextField();
        text3 = new javax.swing.JTextField();
        text4 = new javax.swing.JTextField();
        text5 = new javax.swing.JTextField();
        text7 = new javax.swing.JTextField();
        text8 = new javax.swing.JTextField();
        text9 = new javax.swing.JTextField();
        label1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        label4 = new javax.swing.JLabel();
        label5 = new javax.swing.JLabel();
        label7 = new javax.swing.JLabel();
        box6 = new javax.swing.JCheckBox();
        label6 = new javax.swing.JLabel();
        label8 = new javax.swing.JLabel();
        label9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textBox = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        dropdown = new javax.swing.JComboBox<>();
        label14 = new javax.swing.JLabel();
        label15 = new javax.swing.JLabel();
        labelDropdown = new javax.swing.JLabel();
        label10 = new javax.swing.JLabel();
        box10 = new javax.swing.JCheckBox();
        prevButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("View Record");

        text2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text2ActionPerformed(evt);
            }
        });

        text7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text7ActionPerformed(evt);
            }
        });

        label1.setText("jLabel2");

        label2.setText("jLabel3");

        label3.setText("jLabel4");

        label4.setText("jLabel5");

        label5.setText("jLabel6");

        label7.setText("jLabel8");

        box6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box6ActionPerformed(evt);
            }
        });

        label6.setText("jLabel7");

        label8.setText("jLabel9");

        label9.setText("jLabel10");

        textBox.setColumns(20);
        textBox.setRows(5);
        jScrollPane1.setViewportView(textBox);

        jScrollPane2.setViewportView(list);

        label14.setText("jLabel15");

        label15.setText("jLabel16");

        labelDropdown.setText("jLabel2");

        label10.setText("jLabel2");

        prevButton.setText("Prev");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1)
                            .addComponent(label2)
                            .addComponent(label3)
                            .addComponent(label4)
                            .addComponent(label5)
                            .addComponent(label7)
                            .addComponent(label6)
                            .addComponent(label8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(box6)
                                .addGap(0, 61, Short.MAX_VALUE))
                            .addComponent(text2)
                            .addComponent(text3)
                            .addComponent(text4, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(text5)
                            .addComponent(text1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(label9)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text7)
                            .addComponent(text8)
                            .addComponent(text9))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label15)
                            .addComponent(label14)
                            .addComponent(labelDropdown)
                            .addComponent(label10))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nextButton)
                            .addComponent(prevButton))
                        .addGap(10, 10, 10)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                    .addComponent(box10)
                    .addComponent(dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1)
                    .addComponent(label10)
                    .addComponent(box10))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2)
                    .addComponent(labelDropdown)
                    .addComponent(dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label6)
                            .addComponent(box6))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label14)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label8)
                                    .addComponent(prevButton)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(text7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label7)
                                .addComponent(label15)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(text9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(label9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(nextButton)
                                .addGap(14, 14, 14)))))
                .addContainerGap())
        );

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(258, 258, 258))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backButton))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text2ActionPerformed

    private void text7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text7ActionPerformed

    private void box6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box6ActionPerformed

        if (box6.isSelected()) {
            text7.setEnabled(true);
            text8.setEnabled(true);
            text9.setEnabled(true);
        } else {
            text7.setEnabled(false);
            text8.setEnabled(false);
            text9.setEnabled(false);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_box6ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        new SearchRecord(0).setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed

         if(currentComment == comments.size())
         { System.out.println("No more Comments");}
         else{
               textBox.setText("");
               currentComment += 1;
                textBox.setText(comments.get(currentComment));
             }
            


        // TODO add your handling code here:
    }//GEN-LAST:event_nextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed

         if(currentComment == 0)
         { System.out.println("No more Comments");}
         else{
               textBox.setText("");
               currentComment -= 1;
                textBox.setText(comments.get(currentComment));
             }




        // TODO add your handling code here:
    }//GEN-LAST:event_prevButtonActionPerformed

    private void setUpForm(DBObject selectedObject) {

        text1.setEnabled(false);
        text2.setEnabled(false);
        text3.setEnabled(false);
        text4.setEnabled(false);
        text5.setEnabled(false);
        box6.setEnabled(false);
        text7.setEnabled(false);
        text8.setEnabled(false);
        text9.setEnabled(false);
        box10.setEnabled(false);
        dropdown.setEnabled(false);
        textBox.setEnabled(false);
        list.setEnabled(false);

        switch (dataType) {

            case 1:
                label1.setText("Software:");
                label2.setText("Version:");
                label6.setText("Additional Tools");
                label7.setText("Tool 1:");
                label8.setText("Tool 2:");
                label9.setText("Tool 3:");

                label3.setVisible(false);
                text3.setVisible(false);
                label4.setVisible(false);
                text4.setVisible(false);
                label5.setVisible(false);
                text5.setVisible(false);
                label10.setVisible(false);
                box10.setVisible(false);
                label14.setVisible(false);
                list.setVisible(false);
                label15.setVisible(false);
                textBox.setVisible(false);
                dropdown.setVisible(false);
                jScrollPane1.setVisible(false);
                jScrollPane2.setVisible(false);
                labelDropdown.setVisible(false);

                if (selectedObject != null) {
                    text1.setText(selectedObject.get("title").toString());
                    text2.setText(selectedObject.get("version").toString());
                    if (selectedObject.get("tools") != null) {
                        BasicDBList toolList = (BasicDBList) selectedObject.get("tools");
                        for(int i = 0;i<toolList.size();i++)
                        {
                            String tool = toolList.get(i).toString();
                            if(i==0)
                                text7.setText(tool);
                            if(i==1)
                                text8.setText(tool);
                            if(i==2)
                                text9.setText(tool);
                        }
                    }
                    
                }

                break;

            case 2:
                label1.setText("Image:");
                label2.setText("Machine:");
                label6.setText("Accessories");
                label7.setText("Accessory 1:");
                label8.setText("Accessory 2:");
                label9.setText("Accessory 3:");
                labelDropdown.setText("Location");
                label14.setText("Software:");
                label15.setText("Comment:");

                label3.setVisible(false);
                text3.setVisible(false);
                label4.setVisible(false);
                text4.setVisible(false);
                label5.setVisible(false);
                text5.setVisible(false);
                label10.setVisible(false);
                box10.setVisible(false);




                dropdown.addItem(selectedObject.get("location").toString());

                if (selectedObject != null) {
                    text1.setText(selectedObject.get("image").toString());
                    text2.setText(selectedObject.get("machine").toString());
                    if (selectedObject.get("accessories") != null) {
                        BasicDBList toolList = (BasicDBList) selectedObject.get("accessories");
                        for(int i = 0;i<toolList.size();i++)
                        {
                            String tool = toolList.get(i).toString();
                            System.out.println(tool + "  " +i);
                            
                            if(i==0)
                                text7.setText(tool);
                            if(i==1)
                                text8.setText(tool);
                            if(i==2)
                                text9.setText(tool);
                        }
                    }
                    
                    if (selectedObject.get("comments") != null) {
                        BasicDBList monitors = (BasicDBList) selectedObject.get("comments");
                        comments = new ArrayList<String>();
                        for (Iterator<Object> it = monitors.iterator(); it.hasNext();) {
                            BasicDBObject dbo = (BasicDBObject) it.next();
                            String comment = dbo.get("comment").toString() + " - " + dbo.get("date").toString();
                            System.out.println(comment);
                            comments.add(comment);
                            textBox.setText(comment);
                            currentComment += 1;
                        }

                    }
                   ArrayList<DBObject> softwareList;
                   //System.out.println(softwareList);
                    softwareList = db.getSoftware();
                    
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < softwareList.size(); i++) {

            System.out.println(softwareList.get(i).get("_id").toString());
            
        }
                
        }

                break;

            case 3:
                label1.setText("Machine:");
                label2.setText("Name:");
                label3.setText("Serial #:");
                label4.setText("MAC:");
                label5.setText("STOCK:");

                label6.setText("Monitor");
                label7.setText("Model:");
                label8.setText("Serial #:");
                label9.setText("STOCK:");
                label15.setText("Comment:");

                label14.setVisible(false);
                list.setVisible(false);
                label10.setVisible(false);
                box10.setVisible(false);
                labelDropdown.setVisible(false);
                dropdown.setVisible(false);
                jScrollPane2.setVisible(false);

                if (selectedObject != null) {
                    text1.setText(selectedObject.get("machine").toString());
                    text2.setText(selectedObject.get("name").toString());
                    text3.setText(selectedObject.get("serial").toString());
                    text4.setText(selectedObject.get("stock").toString());
                    text5.setText(selectedObject.get("mac").toString());

                    if (selectedObject.get("monitor") != null) {
                        BasicDBList monitors = (BasicDBList) selectedObject.get("monitor");
                        for (Iterator<Object> it = monitors.iterator(); it.hasNext();) {
                            BasicDBObject dbo = (BasicDBObject) it.next();

                            text7.setText(dbo.get("monitor").toString());
                            text8.setText(dbo.get("mSerial").toString());
                            text9.setText(dbo.get("mStock").toString());
                        }

                    }
                    if (selectedObject.get("comments") != null) {
                        BasicDBList monitors = (BasicDBList) selectedObject.get("comments");
                        comments = new ArrayList<String>();
                        for (Iterator<Object> it = monitors.iterator(); it.hasNext();) {
                            BasicDBObject dbo = (BasicDBObject) it.next();
                            String comment = dbo.get("comment").toString() + " - " + dbo.get("date").toString();
                            comments.add(comment);
                            textBox.setText(comment);
                            currentComment += 1;
                        }

                    }

                }

                break;

            case 4:
                label1.setText("Classroom:");
                label2.setText("Capacity:");
                label10.setText("Video Conferencing:");
                label15.setText("Comment:");

                label6.setVisible(false);
                box6.setVisible(false);
                text7.setVisible(false);
                text8.setVisible(false);
                text9.setVisible(false);
                label7.setVisible(false);
                label8.setVisible(false);
                label9.setVisible(false);

                label3.setVisible(false);
                text3.setVisible(false);
                label4.setVisible(false);
                text4.setVisible(false);
                label5.setVisible(false);
                text5.setVisible(false);

                label14.setVisible(false);
                list.setVisible(false);
                dropdown.setVisible(false);
                jScrollPane2.setVisible(false);
                labelDropdown.setVisible(false);

                if (selectedObject != null) {

                    text1.setText(selectedObject.get("classroom").toString());
                    text2.setText(selectedObject.get("capacity").toString());
                    box10.setEnabled((boolean) selectedObject.get("videoconferencing"));
                    
                    if (selectedObject.get("comments") != null) {
                        BasicDBList monitors = (BasicDBList) selectedObject.get("comments");
                        comments = new ArrayList<String>();
                        for (Iterator<Object> it = monitors.iterator(); it.hasNext();) {
                            BasicDBObject dbo = (BasicDBObject) it.next();
                            String comment = dbo.get("comment").toString() + " - " + dbo.get("date").toString();
                            comments.add(comment);
                            textBox.setText(comment);
                            currentComment += 1;
                        }

                    }

                }
                break;
        }
    }

    private void setUpForm() {
        DBObject newObject = null;
        setUpForm(newObject);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JCheckBox box10;
    private javax.swing.JCheckBox box6;
    private javax.swing.JComboBox<String> dropdown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label10;
    private javax.swing.JLabel label14;
    private javax.swing.JLabel label15;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label4;
    private javax.swing.JLabel label5;
    private javax.swing.JLabel label6;
    private javax.swing.JLabel label7;
    private javax.swing.JLabel label8;
    private javax.swing.JLabel label9;
    private javax.swing.JLabel labelDropdown;
    private javax.swing.JList<String> list;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JTextField text1;
    private javax.swing.JTextField text2;
    private javax.swing.JTextField text3;
    private javax.swing.JTextField text4;
    private javax.swing.JTextField text5;
    private javax.swing.JTextField text7;
    private javax.swing.JTextField text8;
    private javax.swing.JTextField text9;
    private javax.swing.JTextArea textBox;
    // End of variables declaration//GEN-END:variables
}
