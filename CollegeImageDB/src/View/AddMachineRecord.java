/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ComputerBuilder;
import Controller.ComputerCreationState;
import Controller.CreationState;
import Controller.DatabaseProxy;
import Controller.MonitorBuilder;
import Controller.MonitorCreationState;
import Controller.MultipleCreationState;
import Controller.PrinterBuilder;
import Controller.PrinterCreationState;
import com.mongodb.BasicDBObject;
import com.mongodb.DBObject;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

/**
 *
 * @author Diogo
 */
public class AddMachineRecord extends javax.swing.JFrame {

    
    CreationState currentState;
    
    /**
     * Creates new form AddMachineRecord
     */
    public AddMachineRecord() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        machineStateDropdown = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        macLabel = new javax.swing.JLabel();
        machineField = new javax.swing.JTextField();
        stockField = new javax.swing.JTextField();
        serialField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        macField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        commentArea = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        addComponentsButton = new javax.swing.JToggleButton();
        backButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Add Machine");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        machineStateDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer", "Monitor", "Printer" }));
        machineStateDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                machineStateDropdownActionPerformed(evt);
            }
        });

        jLabel2.setText("Machine:");

        nameLabel.setText("Name:");

        jLabel4.setText("Serial:");

        jLabel5.setText("Stock:");

        macLabel.setText("MAC:");

        stockField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockFieldActionPerformed(evt);
            }
        });

        commentArea.setColumns(20);
        commentArea.setRows(5);
        jScrollPane1.setViewportView(commentArea);

        jLabel7.setText("Comment");

        addComponentsButton.setText("Add Components");
        addComponentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addComponentsButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(machineStateDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(macLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel)
                                .addGap(13, 13, 13)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(machineField, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(serialField)
                            .addComponent(stockField)
                            .addComponent(nameField)
                            .addComponent(macField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(addComponentsButton))
                        .addGap(20, 20, 20))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButton)
                    .addComponent(createButton))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addComponent(machineStateDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(machineField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stockField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(serialField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(macLabel)
                    .addComponent(macField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addComponentsButton))
                .addGap(18, 18, 18)
                .addComponent(addButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(backButton))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stockFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockFieldActionPerformed

    private void machineStateDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_machineStateDropdownActionPerformed

        Object selected = machineStateDropdown.getSelectedItem();
        
         switch (selected.toString()) {
             case "Computer":
            
                 nameField.setVisible(true);
                 macField.setVisible(true);
                 nameLabel.setVisible(true);
                 macLabel.setVisible(true);
                 addComponentsButton.setVisible(true);
                 
                 nameField.setEnabled(true);
                 macField.setEnabled(true);
                 nameLabel.setEnabled(true);
                 macLabel.setEnabled(true);
                 addComponentsButton.setEnabled(true);
                 
                 if(currentState instanceof MultipleCreationState)
                     {
                         
                     }
                 else{
                     currentState = new ComputerCreationState();
                 }
                 
                 break;
                 
             case "Monitor":
                 
                 nameField.setVisible(false);
                 macField.setVisible(false);
                 nameLabel.setVisible(false);
                 macLabel.setVisible(false);
                 addComponentsButton.setVisible(false);
                 
                 nameField.setEnabled(false);
                 macField.setEnabled(false);
                 nameLabel.setEnabled(false);
                 macLabel.setEnabled(false);
                 addComponentsButton.setEnabled(false);
                 
                 if(currentState instanceof MultipleCreationState)
                     {
                         
                     }
                 else{
                     currentState = new MonitorCreationState();
                 }
                 
                 break;
                 
            case "Printer":
                 
                 nameField.setVisible(false);
                 macField.setVisible(false);
                 nameLabel.setVisible(false);
                 macLabel.setVisible(false);
                 addComponentsButton.setVisible(false);
                 
                 nameField.setEnabled(false);
                 macField.setEnabled(false);
                 nameLabel.setEnabled(false);
                 macLabel.setEnabled(false);
                 addComponentsButton.setEnabled(false);
                 
                 if(currentState instanceof MultipleCreationState)
                     {
                         
                     }
                 else{
                     currentState = new PrinterCreationState();
                 }
                 
                 break;
         }





        // TODO add your handling code here:
    }//GEN-LAST:event_machineStateDropdownActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed

        currentState.build(machineField.getText(),serialField.getText(), stockField.getText(), macField.getText(), nameField.getText());
        if(commentArea.getText().length()>0)
        {
            Date date = new Date();
                DatabaseProxy dp = new DatabaseProxy();
                ArrayList<DBObject> users = new ArrayList<DBObject>();
                BasicDBObject dbo = new BasicDBObject("loggedIn",true);
                users = dp.getRecord(dbo, "acoounts");
                dp = null;
            currentState.addComment(commentArea.getText(),new Date(),users.get(0).get("account").toString());
        }
        currentState.create();


        // TODO add your handling code here:
    }//GEN-LAST:event_createButtonActionPerformed

    private void addComponentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addComponentsButtonActionPerformed

        if(addComponentsButton.isSelected()==true)
        {
            currentState = new MultipleCreationState();
            addButton.setVisible(true);
            addButton.setEnabled(true);
        }
        else{
            currentState = new ComputerCreationState();
            addButton.setVisible(false);
            addButton.setEnabled(false);
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_addComponentsButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        Object selected = machineStateDropdown.getSelectedItem();
         CreationState newState = null;
        switch (selected.toString()) {
            case "Computer":

            newState =  new ComputerCreationState();    
            
            break;
            
            case "Monitor":
                
            newState =  new MonitorCreationState();    
                
            break;
            
            case "Printer":
                
            newState =  new PrinterCreationState();  
            
            break;
        }
            newState.build(machineField.getText(),serialField.getText(), stockField.getText(), macField.getText(), nameField.getText());

           if(commentArea.getText().length()>0)
            {
               newState.addComment(commentArea.getText(),new Date(),null);
            }
            currentState.add(newState);
            newState = null;
        // TODO add your handling code here:
    }//GEN-LAST:event_addButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        new AddRecord().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMachineRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMachineRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMachineRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMachineRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMachineRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JToggleButton addComponentsButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextArea commentArea;
    private javax.swing.JButton createButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField macField;
    private javax.swing.JLabel macLabel;
    private javax.swing.JTextField machineField;
    private javax.swing.JComboBox<String> machineStateDropdown;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField serialField;
    private javax.swing.JTextField stockField;
    // End of variables declaration//GEN-END:variables
}
